// querydsl 버전 설정
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'univ.kgu'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Swagger
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0"

	// Spring Security
	implementation "org.springframework.boot:spring-boot-starter-security:3.3.4"

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Hibernate
	implementation 'org.hibernate:hibernate-spatial:6.6.1.Final'

	// MapStruct
	annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")
	testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")
	implementation("org.mapstruct:mapstruct:1.5.5.Final")
	implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")

	// Docker Compose Support
	testAndDevelopmentOnly 'org.springframework.boot:spring-boot-docker-compose'
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 추가 시작
def querydslDir = "${buildDir}/generated/querydsl"

sourceSets {
	main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile){
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast{
	file(querydslDir).deleteDir()
}